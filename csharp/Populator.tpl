
<<DOCHISTORY>>
/*-------------------------------------------------------------------------------------------------*/
/* Copyright Luminary Solutions Limited                                                            */
/*-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------*/
/*                                                                                                 */
/* Template:       : Populator.tpl                                                                 */
/*                                                                                                 */
/* Template Name   : OpenROAD Class Proxy Template                                                 */
/*                                                                                                 */
/* System Name     : ProxyGen                                                                      */
/*                                                                                                 */
/* Sub-System Name : PDO populator                                                                 */
/*                                                                                                 */
/* Author          : Luminary - An Ingres Company                                                  */
/*                                                                                                 */
/* Date            : 10/06/2008                                                                    */
/*                                                                                                 */
/* Description     : Used to populate PDOs                                                         */
/*                                                                                                 */
/* Version History                                                                                 */
/*                                                                                                 */
/* Version Date     Who   Description                                                              */
/* ------- -------- ----- -----------                                                              */
/* 1.0     10/06/08 LUM   Original version.                                                        */
/*-------------------------------------------------------------------------------------------------*/
<<DOCHISTORY>>
#region Copyright
/*
 * Copyright ${copyright_holder}
 *
 */
#endregion

#region Code Header
/*
 * Author               : Generated By ProxyGen (Luminary Solutions)
 *
 * File Name            : ${AppService Name}Populator.cs
 *
 * Description          : Generated by ProxyGen from the ${AppService Name} Application Service.
 *                        This code should not be modified.
 *
 * Version History
 *
 * Version  Date                 Who     Description
 * -------  ----------           ---     --------------
 * 1.0      ${datenow}           ${username}     Original Generated Version.
 */
#endregion

#region Namespaces Used
using System;
using System.Data;
using ORRSOLib;
using Luminary.ProxyGen.Util;
using ${namespace_prefix}.DTO;
#endregion

namespace ${namespace_prefix}.ApplicationServices.Wrappers
{
    public class ${AppService Name}Populator
    {
        #region Properties
        #endregion

        #region Class Methods

<<FOREACHCLASS>>
<<!NAME=>>(core!uc_osca)(core!uc_client_info)(core!uc_xml_include)
        /// <summary>
        /// Declare PDO From Object
        /// </summary>
        /// <param name="pdo">PDO to declare.</param>
        /// <param name="attributeName">The Attribute name within the PDO.</param>
        /// <param name="${class_prefix}${class_langname}*DTO*">The Data Transport Object to populate the PDO from.</param>
        public static void DeclarePDOFromObject(ORPDOClass pdo, String name, *U*${class_prefix}${class_langname} *L*${class_prefix}${class_langname}*DTO* )
        {
<<FOREACHATTR>>
<<SCALAR>>
<<!NULLABLE>>
            AttributeManager.DeclareAttribute(pdo, name + ".${name}",${datatype});
<<!NULLABLE>>
<<NULLABLE>>
            You have a nullable scalar. Do you want nullable scalars?
<<NULLABLE>>
<<SCALAR>>
<<CLASS>>
            AttributeManager.DeclareAttribute(pdo, name + ".${name}", Constants.OR_ASA_DATATYPE_USERCLASS);
            DeclarePDOFromObject(pdo, name + ".${name}", *L*${class_prefix}${class_langname}*DTO*.*U*${langname}*Class*);
<<CLASS>>
<<ARRAY>>
            AttributeManager.DeclareAttribute(pdo, name + ".${name}", Constants.OR_ASA_DATATYPE_UCARRAY);
            DeclarePDOFromObject(pdo, name + ".${name}", new *U*${type}());
<<ARRAY>>
<<FOREACHATTR>>
        }

<<!NAME=>>(core!uc_osca)(core!uc_client_info)(core!uc_xml_include)
<<FOREACHCLASS>>

<<FOREACHCLASS>>
<<!NAME=>>(core!uc_osca)(core!uc_client_info)(core!uc_xml_include)
        /// <summary>
        /// PopulatePDOFromObject
        /// </summary>
        /// <param name="pdo">PDO to populate.</param>
        /// <param name="attributeName">The Attribute name within the PDO.</param>
        /// <param name="${class_prefix}${class_langname}*DTO*">The Data Transport Object to populate the PDO from.</param>
        public static void PopulatePDOFromObject(ORPDOClass pdo, String name, *U*${class_prefix}${class_langname} *L*${class_prefix}${class_langname}*DTO* )
        {
            if (*L*${class_prefix}${class_langname}*DTO* == null)
            {
                return;
            }

<<FOREACHATTR>>
<<SCALAR>>
<<!NULLABLE>>
            AttributeManager.SetAttribute(pdo, name + ".${name}",*L*${class_prefix}${class_langname}*DTO*.*U*${langname});
<<!NULLABLE>>
<<NULLABLE>>
            You have a nullable scalar. Do you want nullable scalars?
<<NULLABLE>>
<<SCALAR>>
<<CLASS>>
            PopulatePDOFromObject(pdo, name + ".${name}", *L*${class_prefix}${class_langname}*DTO*.*U*${langname}*Class*);
<<CLASS>>
<<!DEFINED>>(${list})
<<ARRAY>>
            for( int i=1; i<=*L*${class_prefix}${class_langname}*DTO*.*U*${langname}*List*.Count; i++)
            {
                PopulatePDOFromObject(pdo, name + ".${name}[" + i + "]", *L*${class_prefix}${class_langname}*DTO*.*U*${langname}*List*[i-1]);
            }
<<ARRAY>>
<<!DEFINED>>(${list})
<<DEFINED>>(${list})
<<ARRAY>>
            for ( int i=1; i <= *L*${class_prefix}${class_langname}*DTO*.Count; i++)
            {
                PopulatePDOFromObject(pdo, name + ".${name}[" + i + "]", *L*${class_prefix}${class_langname}*DTO*[i-1]);
            }
<<ARRAY>>
<<DEFINED>>(${list})
<<FOREACHATTR>>
        }

<<!NAME=>>(core!uc_osca)(core!uc_client_info)(core!uc_xml_include)
<<FOREACHCLASS>>
        #endregion
    }
}
